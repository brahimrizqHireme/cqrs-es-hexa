name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    name: Test Job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [8.2]

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.serverStatus()'" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --prefer-dist


#      - name: Set up Docker
#        uses: docker/setup-buildx-action@v1
#
#      - name: Build Docker image
#        run: docker build --cache-from myapp:latest --tag myapp:latest .
#
#      - name: Generate SSL Key for JWT
#        run: php bin/console lexik:jwt:generate-keypair
#
#      - name: Migrate database
#        run: php bin/console d:m:m --no-interaction --env=test
#
#      - name: Loading fixtures
#        run: php bin/console d:f:l --no-interaction --env=test

      - name: Run tests
        env:
          MONGODB_URI: mongodb://localhost:27017/cqrs_test
          APP_ENV: test
        run: php vendor/bin/phpunit --configuration phpunit.xml.dist

#      - name: Run PHPStan
#        run: vendor/bin/phpstan analyze
#
#      - name: Run PHPCS
#        run: vendor/bin/phpcs --standard=PSR12 src/
#
#      - name: Generate Code Coverage
#        run: vendor/bin/phpunit --coverage-clover=coverage.xml
#
#      - name: Upload Code Coverage
#        uses: actions/upload-artifact@v2
#        with:
#          name: code-coverage
#          path: coverage.xml